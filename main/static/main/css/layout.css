:root {
    --accent: #E9C46A;
    --main: #264653;
    --main-two: #F4A261;
    --accent-two: #2A9D8F;
    --accent-three: #E76F51;
}
::selection {
    background: var(--accent);
    color: var(--main);
}

/* General Styling */
/* removing default margin from nodes */
html, body, nav, ul, p, h1, h2, h3, h4, h5, h6 {margin: 0; padding: 0;}
li { list-style-type: none; line-height: 1em; }
a { color: white; text-decoration: none; font-size: .8em; }
p { font-size: .8em; }
a:hover { text-decoration: underline; }
.hidden { z-index: -1; user-select: none; opacity: 0% !important; }
body {
    font-family: 'Poppins', sans-serif;
    background: lightgrey;
}
#note-edit-button {
    position: absolute;
    right: 5%;
    bottom: 5%;
    transition: background .5s ease; 
}
#note-edit-button:hover {
    background: gray;
}

/* End of General Styling */


/* Navigation Styling */
nav {
    /* flex box for centering items center of navbar */
    display: flex;
    align-items: center;
    /* pushes items away from each other */
    justify-content: space-between;
    /* want to occupy 100% of X axis */
    width: 100%;
    /* no constraints on height, let it flow like water */
    height: auto;
    /* since space-between is pushing items away we dont want them touching the left/right edges of nav */
    padding: 0 4em;
    /* including the padding in the calculation for width/height of nav (otherwise overflow on x axis will occur) */
    box-sizing: border-box;
    background: var(--main);
    color: var(--accent);
}
nav ul {
    /* want to align items in a row vertically centered */
    display: flex;
    align-items: center;
}
/* provide space on even lis */
nav ul li:nth-of-type(even) { margin: 0 .5em; }
.current {
    /* 1.6em on bottom since .4em of space is being used by the border bottom */
    padding: 3em 0 2.6em 0;
    border-bottom: .4em solid var(--accent);
}
.current:hover { border-bottom-color: #e9c56a8f; }
/* End of Navigation Styling */

/* Start of Table Styling */
#item-table tr { position: relative; margin: 5em 0; }
#item-table th {
    /* always behind the actual content */
    opacity: .5;
    z-index: 0;
    font-size: 3.5em;
    position: absolute;
    /* font comes with a large amount of line height */
    line-height: .1em;
    padding: 0; 
    transition-timing-function: ease;
    transition: background .5s, opacity .5s;
    cursor: help;
}
#item-table td {
    background: var(--main);
    color: white;
    /* always in front of the label (header) */
    z-index: 1;
    opacity: 1;
    /* moving the element to bottom of large th text */
    margin-top: 1.5em;
    /* providing space uptop */
    padding: 2em 1em;
    box-shadow: 0 0 1em black;
    width: 50%;
    transition-timing-function: ease;
    transition: background .5s, opacity .5s;
}
.note-iteration {
    margin: .5em 0;
    text-align: left;
}
.tableitem-mouseenter {
    opacity: 1 !important;
    z-index: 2 !important;
}
.tableitem-mouseleave {
    opacity: .5 !important;
    z-index: 0 !important;
}
/* this way its children can inherit the width and when viewing
the note, relative headers won't break immediately */
tbody { width: 100%; }
table {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: left;
    width: 100%;
}
tr {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    flex-direction: column;
    margin: 2em 0;
    width: 100%;
}
th {
    vertical-align: text-top;
    padding: 1em 0;
}
.table-data-container {
    max-width: 80%;
    width: 100%;
    text-align: center;
}
textarea {
    width: 100%;
}
.iteration-input {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    width: 100%;
}
.iteration-input button {
    height: fit-content;
}
.message {
    width: 100%;
    padding: 1.5em 1em;
    box-sizing: border-box;
}
.warning {
    background: red; 
    color: darkred;
}
.success {
    background: darkgreen;
    color: lightgreen;
}
form {
    margin: 0;
}
button {
    border: none;
    padding: .2em 2em; margin: .5em 0;
    border-radius: 1em;
    font-size: .7em;
    transition: transform .5s ease;
}
button:hover { cursor: pointer; }
main {
    min-height: 65%;
    display: flex;
    flex-direction: column;
    text-align: center;
    justify-content: flex-start;
    align-items: center;
    padding: 2em 0;
    position: relative;
}
.helper {
    color: gray;
    font-size: .7em;
}
h4 {
    margin: 0;
}
a:hover {
    color: gray;
}
.static-button {
}
.static-button:hover {
    transform: none;
}

/* Start of Item Styling */
#items-flex-container {
    display: flex;
    flex-wrap: wrap;
    /* otherwise items will touch edges of screen (left, right) */
    max-width: 80%;
    justify-content: flex-start;
    align-items: stretch;
}
.item {
    /* allows for absolute positioned children to be positioned relative to this parent item, instead of the viewport/and or document */
    position: relative;
    flex-grow: 1;
    /* default color is learning color */
    background: var(--main);
    /* otherwise items are going to be touching one another */
    margin: .5em; padding: 2em;
    display: flex;
    align-items: center; justify-content: center;
}
.item-animate {
    /* transition-timing-function: ease; */
    transition-timing-function: ease;
    transition: transform .5s, box-shadow .35s; 
}
.item-shader {
    /* position relative to nearest positioned ancestor */
    position: absolute;
    width: 100%; height: 100%;
    background: black;
    opacity: .3;
    top: 0; left: 0;
}
.item-animate:hover { cursor: pointer; box-shadow: -5px 5px 0 black; transform: translateY(-5px); }
.item a { color: var(--accent); }
/* default color of understand bar "does not understand" color*/
.understand-bar { 
    /* positioned relative to nearest positioned ancestor (.item) */
    position: absolute;
    width: 1em; height: 1.5em; 
    background: var(--accent-three);
    top: 0; left: 5%;
 }
.understand { background: var(--accent-two); }

@keyframes new-item-clicked {
    100% {
        border-radius: 50%;
    }
    0% {
        border-radius: 0%;
        right: 5%;
        transform: translate(0%, 0%);
        top: 0%;
        padding: 1em;
    }
}
.item-add {
    position: absolute;
    right: 50%; top: 50%;
    transform: translate(50%, -50%);
    border: none;
    border-radius: 50%;
    padding: 1em 1.5em; margin: 0;
    background: var(--accent);
    color: black;
    animation-timing-function: ease;
    animation-name: new-item-clicked;
    animation-duration: .8s;
    animation-fill-mode: forwards;
    animation-play-state: paused;
    animation-iteration-count: infinite;
    animation-direction: alternate-reverse;
    z-index: 2;
}

.new-item-form {
    opacity: 100%;
    transition-timing-function: ease;
    transition: z-index .5s, opacity .5s;
    z-index: 1;
}
.new-item-form .item-shader {
    background: transparent;
    z-index: 1;
}
.new-item-form.hidden {
    z-index: 0;
}

.form-item {
    text-align: left;
    margin: 0 auto;
    width: fit-content;
    color: var(--accent);
}
.input-add-container { height: 60%; }
.input-add-container button {
    background: black;
    color: var(--accent);
    max-width: fit-content;
    border: none;
    height: 100%;
    border-radius: 0;
}
.input-add-container input {
    background: none;
    border: 3px solid black;
    color: var(--accent);
    height: 100%;
}
.input-add-container input:focus {
    outline: none;
    box-shadow: -5px 2px 5px gray;
}
.folder {
    background: var(--main-two);
    color: var(--main);
    display: flex;
    flex-direction: column;
    align-items: center;
}
/* End of Item Styling */

/* Start of Footer Styling */
footer {
    background: var(--main);
    max-width: 100%;
    padding: 2em 4em 4em 4em;
    box-sizing: border-box;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    color: lightgrey;
}
footer h2 { color: var(--accent); margin-bottom: .5em; }
footer a { color: lightgrey; }
footer .navigation {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    margin-bottom: .5em;
}
.navigation ul:nth-of-type(even) {
    margin: 0 1.5em;
}
.social {
    display: inline-block;
    padding: 1em;
    background: gray;
    border-radius: 50%;
}
.copyright {
    position: absolute;
    bottom: 5%;
    left: 3%;
}
#quote {
    position: absolute;
    top: 50%; right: 50%;
    transform: translate(50%, -50%);
}
/* End of Footer Styling */

/* Start of Media Styling */
@media screen and (max-width: 1300px) {
    #item-table th {
        font-size: 3em;
    }
    #item-table td {
        margin-top: 1em;
    }
}
@media screen and (max-width: 700px) {
    #item-table th {
        font-size: 2.5em;
    }
}
@media screen and (max-width: 600px) {
    #item-table th {
        font-size: 2em;
    }
    #item-table td {
        margin-top: .7em;
    }
}
@media screen and (max-width: 500px) {
    #quote {
        display: none;
    }
    #item-table th {
        font-size: 1.5em;
    }
    #item-table td {
        margin-top: .5em;
    }
}
/* End of Media Styling */